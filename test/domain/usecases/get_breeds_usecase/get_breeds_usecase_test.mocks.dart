// Mocks generated by Mockito 5.4.2 from annotations
// in dog_app/test/domain/usecases/get_breeds_usecase/get_breeds_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:dog_app/core/exceptions/failures.dart' as _i5;
import 'package:dog_app/data/model/breed_model.dart' as _i6;
import 'package:dog_app/domain/repositories/breed_repository.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [BreedRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockBreedRepository extends _i1.Mock implements _i3.BreedRepository {
  MockBreedRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.BreedModel>>> getBreeds() =>
      (super.noSuchMethod(
        Invocation.method(
          #getBreeds,
          [],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i6.BreedModel>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.BreedModel>>(
          this,
          Invocation.method(
            #getBreeds,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.BreedModel>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<String>>> getImagesBySubBreed(
    String? breedName,
    String? subBreedName,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getImagesBySubBreed,
          [
            breedName,
            subBreedName,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, List<String>>>.value(
            _FakeEither_0<_i5.Failure, List<String>>(
          this,
          Invocation.method(
            #getImagesBySubBreed,
            [
              breedName,
              subBreedName,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<String>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, String>> getBreedImagesByRandom(
          String? breedName) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBreedImagesByRandom,
          [breedName],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, String>>.value(
            _FakeEither_0<_i5.Failure, String>(
          this,
          Invocation.method(
            #getBreedImagesByRandom,
            [breedName],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, String>>);
}
